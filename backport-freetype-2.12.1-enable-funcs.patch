From 2651de697594c01efd6701045ca4f780437411c8 Mon Sep 17 00:00:00 2001
From: Zacoh <kouzhenrong@h-partners.com>
Date: Thu, 15 May 2025 10:21:38 +0800
Subject: [PATCH] freetype update version 2.13.3

---
 include/freetype/internal/ftgloadr.h |  2 +-
 include/freetype/internal/ftobjs.h   |  2 +-
 include/freetype/internal/ftstream.h | 20 ++++++++++----------
 src/base/ftgloadr.c                  |  2 +-
 src/base/ftobjs.c                    |  6 +++---
 src/base/ftstream.c                  | 16 ++++++++--------
 6 files changed, 24 insertions(+), 24 deletions(-)

diff --git a/include/freetype/internal/ftgloadr.h b/include/freetype/internal/ftgloadr.h
index f1c155b..b32eb6b 100644
--- a/include/freetype/internal/ftgloadr.h
+++ b/include/freetype/internal/ftgloadr.h
@@ -88,7 +88,7 @@ FT_BEGIN_HEADER
   FT_GlyphLoader_Done( FT_GlyphLoader  loader );
 
   /* reset a glyph loader (frees everything int it) */
-  FT_BASE( void )
+  FT_EXPORT( void )
   FT_GlyphLoader_Reset( FT_GlyphLoader  loader );
 
   /* rewind a glyph loader */
diff --git a/include/freetype/internal/ftobjs.h b/include/freetype/internal/ftobjs.h
index a1e9329..2ef3c29 100644
--- a/include/freetype/internal/ftobjs.h
+++ b/include/freetype/internal/ftobjs.h
@@ -690,7 +690,7 @@ FT_BEGIN_HEADER
 
   /* Free the bitmap of a given glyphslot when needed (i.e., only when it */
   /* was allocated with ft_glyphslot_alloc_bitmap).                       */
-  FT_BASE( void )
+  FT_EXPORT( void )
   ft_glyphslot_free_bitmap( FT_GlyphSlot  slot );
 
 
diff --git a/include/freetype/internal/ftstream.h b/include/freetype/internal/ftstream.h
index fd52f76..d2bc268 100644
--- a/include/freetype/internal/ftstream.h
+++ b/include/freetype/internal/ftstream.h
@@ -357,13 +357,13 @@ FT_BEGIN_HEADER
 
 
   /* create a new (input) stream from an FT_Open_Args structure */
-  FT_BASE( FT_Error )
+  FT_EXPORT( FT_Error )
   FT_Stream_New( FT_Library           library,
                  const FT_Open_Args*  args,
                  FT_Stream           *astream );
 
   /* free a stream */
-  FT_BASE( void )
+  FT_EXPORT( void )
   FT_Stream_Free( FT_Stream  stream,
                   FT_Int     external );
 
@@ -379,22 +379,22 @@ FT_BEGIN_HEADER
 
 
   /* seek within a stream. position is relative to start of stream */
-  FT_BASE( FT_Error )
+  FT_EXPORT( FT_Error )
   FT_Stream_Seek( FT_Stream  stream,
                   FT_ULong   pos );
 
   /* skip bytes in a stream */
-  FT_BASE( FT_Error )
+  FT_EXPORT( FT_Error )
   FT_Stream_Skip( FT_Stream  stream,
                   FT_Long    distance );
 
   /* return current stream position */
-  FT_BASE( FT_ULong )
+  FT_EXPORT( FT_ULong )
   FT_Stream_Pos( FT_Stream  stream );
 
   /* read bytes from a stream into a user-allocated buffer, returns an */
   /* error if not all bytes could be read.                             */
-  FT_BASE( FT_Error )
+  FT_EXPORT( FT_Error )
   FT_Stream_Read( FT_Stream  stream,
                   FT_Byte*   buffer,
                   FT_ULong   count );
@@ -485,7 +485,7 @@ FT_BEGIN_HEADER
                       FT_Error*  error );
 
   /* read a 16-bit big-endian unsigned integer from a stream */
-  FT_BASE( FT_UInt16 )
+  FT_EXPORT( FT_UInt16 )
   FT_Stream_ReadUShort( FT_Stream  stream,
                         FT_Error*  error );
 
@@ -495,12 +495,12 @@ FT_BEGIN_HEADER
                          FT_Error*  error );
 
   /* read a 32-bit big-endian integer from a stream */
-  FT_BASE( FT_UInt32 )
+  FT_EXPORT( FT_UInt32 )
   FT_Stream_ReadULong( FT_Stream  stream,
                        FT_Error*  error );
 
   /* read a 16-bit little-endian unsigned integer from a stream */
-  FT_BASE( FT_UInt16 )
+  FT_EXPORT( FT_UInt16 )
   FT_Stream_ReadUShortLE( FT_Stream  stream,
                           FT_Error*  error );
 
@@ -511,7 +511,7 @@ FT_BEGIN_HEADER
 
   /* Read a structure from a stream.  The structure must be described */
   /* by an array of FT_Frame_Field records.                           */
-  FT_BASE( FT_Error )
+  FT_EXPORT( FT_Error )
   FT_Stream_ReadFields( FT_Stream              stream,
                         const FT_Frame_Field*  fields,
                         void*                  structure );
diff --git a/src/base/ftgloadr.c b/src/base/ftgloadr.c
index 484d98f..c874dfa 100644
--- a/src/base/ftgloadr.c
+++ b/src/base/ftgloadr.c
@@ -101,7 +101,7 @@
 
   /* reset glyph loader, free all allocated tables, */
   /* and start from zero                            */
-  FT_BASE_DEF( void )
+  FT_EXPORT_DEF( void )
   FT_GlyphLoader_Reset( FT_GlyphLoader  loader )
   {
     FT_Memory  memory = loader->memory;
diff --git a/src/base/ftobjs.c b/src/base/ftobjs.c
index 9b97820..ae2b21d 100644
--- a/src/base/ftobjs.c
+++ b/src/base/ftobjs.c
@@ -191,7 +191,7 @@
 
   /* create a new input stream from an FT_Open_Args structure */
   /*                                                          */
-  FT_BASE_DEF( FT_Error )
+  FT_EXPORT_DEF( FT_Error )
   FT_Stream_New( FT_Library           library,
                  const FT_Open_Args*  args,
                  FT_Stream           *astream )
@@ -267,7 +267,7 @@
   }
 
 
-  FT_BASE_DEF( void )
+  FT_EXPORT_DEF( void )
   FT_Stream_Free( FT_Stream  stream,
                   FT_Int     external )
   {
@@ -348,7 +348,7 @@
   }
 
 
-  FT_BASE_DEF( void )
+  FT_EXPORT_DEF( void )
   ft_glyphslot_free_bitmap( FT_GlyphSlot  slot )
   {
     if ( slot->internal && ( slot->internal->flags & FT_GLYPH_OWN_BITMAP ) )
diff --git a/src/base/ftstream.c b/src/base/ftstream.c
index 6672224..b7ae179 100644
--- a/src/base/ftstream.c
+++ b/src/base/ftstream.c
@@ -52,7 +52,7 @@
   }
 
 
-  FT_BASE_DEF( FT_Error )
+  FT_EXPORT_DEF( FT_Error )
   FT_Stream_Seek( FT_Stream  stream,
                   FT_ULong   pos )
   {
@@ -87,7 +87,7 @@
   }
 
 
-  FT_BASE_DEF( FT_Error )
+  FT_EXPORT_DEF( FT_Error )
   FT_Stream_Skip( FT_Stream  stream,
                   FT_Long    distance )
   {
@@ -98,14 +98,14 @@
   }
 
 
-  FT_BASE_DEF( FT_ULong )
+  FT_EXPORT_DEF( FT_ULong )
   FT_Stream_Pos( FT_Stream  stream )
   {
     return stream->pos;
   }
 
 
-  FT_BASE_DEF( FT_Error )
+  FT_EXPORT_DEF( FT_Error )
   FT_Stream_Read( FT_Stream  stream,
                   FT_Byte*   buffer,
                   FT_ULong   count )
@@ -497,7 +497,7 @@
   }
 
 
-  FT_BASE_DEF( FT_UInt16 )
+  FT_EXPORT_DEF( FT_UInt16 )
   FT_Stream_ReadUShort( FT_Stream  stream,
                         FT_Error*  error )
   {
@@ -542,7 +542,7 @@
   }
 
 
-  FT_BASE_DEF( FT_UInt16 )
+  FT_EXPORT_DEF( FT_UInt16 )
   FT_Stream_ReadUShortLE( FT_Stream  stream,
                           FT_Error*  error )
   {
@@ -632,7 +632,7 @@
   }
 
 
-  FT_BASE_DEF( FT_UInt32 )
+  FT_EXPORT_DEF( FT_UInt32 )
   FT_Stream_ReadULong( FT_Stream  stream,
                        FT_Error*  error )
   {
@@ -722,7 +722,7 @@
   }
 
 
-  FT_BASE_DEF( FT_Error )
+  FT_EXPORT_DEF( FT_Error )
   FT_Stream_ReadFields( FT_Stream              stream,
                         const FT_Frame_Field*  fields,
                         void*                  structure )
-- 
2.44.0.windows.1

